{"version":3,"sources":["store/action.js","components/preloader/preloader.jsx","components/filter/filter.jsx","const.js","components/pagination/pagination.jsx","components/table/table.jsx","components/pagenotfound/pagenotfound.jsx","api/api.js","components/app/app.js","store/reducer.js","store/store.js","index.js"],"names":["ActionType","ActionCreator","posts","type","payload","id","page","Preloader","className","connect","state","filterId","dispatch","filterPost","getPostsAtPage","useEffect","action","placeholder","onChange","evt","parseInt","target","value","MAX_POSTS","postList","activePage","React","useState","pagination","setPagination","count","length","createLink","i","to","v4","createActiveItem","counter","TOTAL_PAGES","paginationElements","push","renderPagination","postsAtPage","setCurrentPage","currentPage","fields","direction","sortedField","setSortedField","sortTable","val","sortedFields","sort","a","b","body","map","post","userId","title","onClick","colSpan","PageNotFound","Api","this","_api","fetch","response","json","result","api","getAllPosts","isLoaded","setIsLoaded","getPost","then","path","exact","render","num","match","params","component","initialState","filterList","reducer","currentPageList","slice","filterPosts","filter","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e80b57a7.chunk.js","sourcesContent":["export const ActionType = {\r\n  GET_ALL_POSTS: \"get_all_post\",\r\n  FILTER_POST: \"filter_post\",\r\n  FILTER_ID: \"filter_text\",\r\n  SET_CURRENT_PAGE: \"set_current_page\",\r\n  GET_POSTS_AT_PAGE: \"get_posts_at_page\",\r\n};\r\n\r\nexport const ActionCreator = {\r\n  getAllPosts: (posts) => ({\r\n    type: ActionType.GET_ALL_POSTS,\r\n    payload: posts,\r\n  }),\r\n  getPostsAtPage: () => ({\r\n    type: ActionType.GET_POSTS_AT_PAGE,\r\n  }),\r\n  filterPost: (posts) => ({\r\n    type: ActionType.FILTER_POST,\r\n    payload: posts,\r\n  }),\r\n  filterId: (id) => ({\r\n    type: ActionType.FILTER_ID,\r\n    payload: id,\r\n  }),\r\n  setCurrentPage: (page) => ({\r\n    type: ActionType.SET_CURRENT_PAGE,\r\n    payload: page,\r\n  }),\r\n};\r\n","import React from \"react\";\r\nimport \"./preloader.css\";\r\n\r\nfunction Preloader() {\r\n  return (\r\n    <div className=\"loadingio-spinner-dual-ring-uhp275ka0wt\">\r\n      <div className=\"ldio-x9915im0a9n\">\r\n        <div></div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preloader;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./filter.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { ActionCreator } from \"../../store/action\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ id, filterId, filterPost, getPostsAtPage }) => {\r\n  const filtration = (evt) => {\r\n    filterId(parseInt(evt.target.value, 10));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!id || id === \"\") {\r\n      getPostsAtPage();\r\n    } else {\r\n      filterPost();\r\n    }\r\n  }, [id, filterPost, getPostsAtPage]);\r\n\r\n  return (\r\n    <form action=\"\" className=\"filter-form\">\r\n      <input type=\"text\" placeholder=\"Введите user id\" onChange={filtration} />\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  id: state.filterId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filterId(payload) {\r\n    dispatch(ActionCreator.filterId(payload));\r\n  },\r\n  filterPost(posts) {\r\n    dispatch(ActionCreator.filterPost(posts));\r\n  },\r\n  getPostsAtPage() {\r\n    dispatch(ActionCreator.getPostsAtPage());\r\n  },\r\n});\r\n\r\nFilter.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  filterId: PropTypes.func.isRequired,\r\n  filterPost: PropTypes.func.isRequired,\r\n  getPostsAtPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","export const MAX_POSTS = 50;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ActionCreator } from \"../../store/action\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { v4 } from \"uuid\";\r\nimport { MAX_POSTS } from \"../../const\";\r\nimport \"./pagination.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({ activePage, postList, getPostsAtPage }) => {\r\n  const [pagination, setPagination] = React.useState([]);\r\n  const count = postList.length;\r\n  const createLink = (i) => {\r\n    return (\r\n      <li key={v4()}>\r\n        <Link to={`/page/` + i}>{i}</Link>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const createActiveItem = (i) => {\r\n    return (\r\n      <li key={v4()}>\r\n        <span>{i}</span>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const renderPagination = (counter) => {\r\n    const TOTAL_ELEMENTS = MAX_POSTS;\r\n    const TOTAL_PAGES = counter / TOTAL_ELEMENTS;\r\n    const paginationElements = [];\r\n\r\n    for (let i = 1; i <= TOTAL_PAGES; i++) {\r\n      if (activePage === i) {\r\n        paginationElements.push(createActiveItem(i));\r\n      } else {\r\n        paginationElements.push(createLink(i));\r\n      }\r\n    }\r\n\r\n    setPagination(paginationElements);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    renderPagination(count);\r\n    getPostsAtPage();\r\n  }, [count, activePage, getPostsAtPage]);\r\n\r\n  return <ul className=\"pagination\">{pagination}</ul>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  postList: state.postList,\r\n  activePage: state.activePage,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getPostsAtPage() {\r\n    dispatch(ActionCreator.getPostsAtPage());\r\n  },\r\n});\r\n\r\nPagination.propTypes = {\r\n  postList: PropTypes.array.isRequired,\r\n  activePage: PropTypes.number.isRequired,\r\n  getPostsAtPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport \"./table.css\";\r\nimport Filter from \"../filter/filter\";\r\nimport Pagination from \"../pagination/pagination\";\r\nimport { connect } from \"react-redux\";\r\nimport { ActionCreator } from \"../../store/action\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Table = ({ currentPage, postsAtPage, setCurrentPage }) => {\r\n  const [sortedField, setSortedField] = useState({\r\n    fields: [],\r\n    direction: \"down\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(parseInt(currentPage, 10));\r\n    setSortedField((state) => ({\r\n      ...state,\r\n      fields: postsAtPage,\r\n    }));\r\n  }, [postsAtPage, currentPage, setCurrentPage]);\r\n\r\n  const sortTable = (val) => {\r\n    const sortedFields = [...sortedField.fields];\r\n\r\n    sortedFields.sort((a, b) => {\r\n      if (a[val] < b[val]) {\r\n        return sortedField.direction === \"down\" ? 1 : -1;\r\n      }\r\n\r\n      if (a[val] > b[val]) {\r\n        return sortedField.direction === \"down\" ? -1 : 1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n\r\n    setSortedField((state) => ({\r\n      ...state,\r\n      fields: [...sortedFields],\r\n      direction: state.direction === \"down\" ? \"up\" : \"down\",\r\n    }));\r\n  };\r\n\r\n  const body = sortedField.fields.map((post) => {\r\n    return (\r\n      <tr key={v4()}>\r\n        <td>{post.userId}</td>\r\n        <td>{post.id}</td>\r\n        <td className=\"text-left\">{post.title}</td>\r\n        <td className=\"text-left\">{post.body}</td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Filter />\r\n      <div className=\"table-responsive\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th onClick={() => sortTable(\"userId\")}>User Id</th>\r\n              <th onClick={() => sortTable(\"id\")}>Title id</th>\r\n              <th onClick={() => sortTable(\"title\")}>Title</th>\r\n              <th onClick={() => sortTable(\"body\")}>Message</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {sortedField.fields.length === 0 && (\r\n              <tr>\r\n                <td colSpan=\"4\">Ничего не найдено</td>\r\n              </tr>\r\n            )}\r\n\r\n            {body}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <Pagination />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsAtPage: state.postsAtPage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentPage(page) {\r\n    dispatch(ActionCreator.setCurrentPage(page));\r\n  },\r\n  getPostsAtPage() {\r\n    dispatch(ActionCreator.getPostsAtPage());\r\n  },\r\n});\r\n\r\nTable.propTypes = {\r\n  postsAtPage: PropTypes.array.isRequired,\r\n  setCurrentPage: PropTypes.func.isRequired,\r\n  getPostsAtPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst PageNotFound = () => {\r\n  return (\r\n    <>\r\n      <h1>Данная страница не найдена</h1>\r\n      <p>\r\n        Пожалуйста, вернитесь на <Link to=\"/\">главную страницу</Link>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","class Api {\r\n  constructor() {\r\n    this._api = `https://jsonplaceholder.typicode.com`;\r\n  }\r\n\r\n  async getPost() {\r\n    const response = await fetch(`${this._api}/posts`);\r\n    const result = await response.json();\r\n    return result;\r\n  }\r\n\r\n  async getFilterPost(userId) {\r\n    const response = await fetch(`${this._api}/posts?userId=${userId}`);\r\n    const result = await response.json();\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Api;\r\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ActionCreator } from \"../../store/action\";\nimport { Switch, BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Preloader from \"../preloader/preloader\";\nimport Table from \"../table/table\";\nimport PageNotFound from \"../pagenotfound/pagenotfound\";\nimport Api from \"../../api/api\";\nimport \"./app.css\";\n\nimport PropTypes from \"prop-types\";\n\nconst api = new Api();\n\nconst App = ({ getAllPosts, setCurrentPage, getPostsAtPage }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    api.getPost().then((result) => {\n      getAllPosts(result);\n      getPostsAtPage();\n      setCurrentPage(1);\n      setIsLoaded(true);\n    });\n  }, [getAllPosts, setCurrentPage, getPostsAtPage]);\n\n  if (!isLoaded) {\n    return <Preloader />;\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => {\n              return <Table currentPage={1} />;\n            }}\n          ></Route>\n\n          <Route\n            path=\"/page/:num\"\n            exact\n            render={({ match }) => {\n              const num = match.params.num;\n              return <Table currentPage={num} />;\n            }}\n          ></Route>\n          <Route component={PageNotFound} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAllPosts(posts) {\n    dispatch(ActionCreator.getAllPosts(posts));\n  },\n  setCurrentPage(page) {\n    dispatch(ActionCreator.setCurrentPage(page));\n  },\n  getPostsAtPage() {\n    dispatch(ActionCreator.getPostsAtPage());\n  },\n});\n\nApp.propTypes = {\n  getAllPosts: PropTypes.func.isRequired,\n  setCurrentPage: PropTypes.func.isRequired,\n  getPostsAtPage: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { ActionType } from \"./action\";\r\nimport { MAX_POSTS } from \"../const\";\r\n\r\nconst initialState = {\r\n  postList: [],\r\n  postsAtPage: [],\r\n  filterList: [],\r\n  filterId: 0,\r\n  activePage: 1,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionType.GET_ALL_POSTS:\r\n      return {\r\n        ...state,\r\n        postList: [...action.payload],\r\n      };\r\n\r\n    case ActionType.GET_POSTS_AT_PAGE:\r\n      const currentPageList = state.postList.slice(\r\n        (state.activePage - 1) * MAX_POSTS,\r\n        state.activePage * MAX_POSTS\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        postsAtPage: [...currentPageList],\r\n      };\r\n\r\n    case ActionType.FILTER_POST:\r\n      const filterPosts = state.postList\r\n        .slice((state.activePage - 1) * MAX_POSTS, state.activePage * MAX_POSTS)\r\n        .filter((post) => post.userId === state.filterId);\r\n\r\n      return {\r\n        ...state,\r\n        postsAtPage: [...filterPosts],\r\n      };\r\n\r\n    case ActionType.FILTER_ID:\r\n      return {\r\n        ...state,\r\n        filterId: action.payload,\r\n      };\r\n\r\n    case ActionType.SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        activePage: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/app\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}